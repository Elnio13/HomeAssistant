- id: Terratium Livingroom Light ON
  alias: Terratium Livingroom Light ON
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.on_light_living_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.on_light_living_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
#    - platform: state
#      entity_id: "input_boolean.terrarium_living_lamp"
#      to: "on"
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: "input_boolean.terrarium_living_lamp"
      state: "on"
    - condition: or
      conditions:
        - condition: template
          value_template: "{{ (state_attr('input_datetime.on_light_living_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < (state_attr('input_datetime.off_light_living_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
        - condition: template
          value_template: "{{ (state_attr('input_datetime.on_light_living_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < (state_attr('input_datetime.off_light_living_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
    - service: light.turn_on
      data:
        entity_id: light.terrarium_master_lamp

- id: Terratium Livingroom Light OFF
  alias: Terratium Livingroom Light OFF
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.off_light_living_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.off_light_living_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
#    - platform: state
#      entity_id: "input_boolean.terrarium_living_lamp"
#      to: "off"
    - platform: homeassistant
      event: start
  condition:
    condition: or
    conditions:
      - condition: template
        value_template: "{{ (state_attr('input_datetime.off_light_living_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < (state_attr('input_datetime.on_light_living_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
      - condition: template
        value_template: "{{ (state_attr('input_datetime.off_light_living_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < '24:00:00' }}"
      - condition: state
        entity_id: "input_boolean.terrarium_living_lamp"
        state: "off"
  action:
    - service: light.turn_off
      data:
        entity_id: light.terrarium_master_lamp

#################################################################

- id: Terratium Bedroom Light ON
  alias: Terratium Bedroom Light ON
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.on_light_bedroom_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.on_light_bedroom_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
#    - platform: state
#      entity_id: "input_boolean.terrarium_bedroom_lamp"
#      to: "on"
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: "input_boolean.terrarium_bedroom_lamp"
      state: "on"
    - condition: or
      conditions:
        - condition: template
          value_template: "{{ (state_attr('input_datetime.on_light_bedroom_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < (state_attr('input_datetime.off_light_bedroom_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
        - condition: template
          value_template: "{{ (state_attr('input_datetime.on_light_bedroom_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < (state_attr('input_datetime.off_light_bedroom_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
    - service: light.turn_on
      data:
        entity_id: light.terrarium_bedroom_lamp

- id: Terratium Bedroom Light OFF
  alias: Terratium Bedroom Light OFF
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.off_light_bedroom_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
    - platform: template
      value_template: "{{ states('sensor.time') == (state_attr('input_datetime.off_light_bedroom_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
#    - platform: state
#      entity_id: "input_boolean.terrarium_bedroom_lamp"
#      to: "off"
    - platform: homeassistant
      event: start
  condition:
    condition: or
    conditions:
      - condition: template
        value_template: "{{ (state_attr('input_datetime.off_light_bedroom_terrarium_morning', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < (state_attr('input_datetime.on_light_bedroom_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
      - condition: template
        value_template: "{{ (state_attr('input_datetime.off_light_bedroom_terrarium_evening', 'timestamp') | int | timestamp_custom('%H:%M', False)) <= states('sensor.time') < '24:00:00' }}"
      - condition: state
        entity_id: "input_boolean.terrarium_bedroom_lamp"
        state: "off"
  action:
    - service: light.turn_off
      data:
        entity_id: light.terrarium_bedroom_lamp
