- alias: "Уборка пылесосом по выходным"
  initial_state: "on"
  trigger:
    - platform: time
      at: "14:00"
  condition:
    - condition: state
      entity_id: input_boolean.vacuum_schedule
      state: "on"
    - condition: time
      weekday:
        - sat
        - sun
  action:
    - service: script.turn_on
      entity_id: script.vacuum_all

- alias: "Уборка пылесосом в будни"
  initial_state: "on"
  trigger:
    - platform: time
      at: "16:25"
  condition:
    - condition: state
      entity_id: input_boolean.vacuum_schedule
      state: "on"
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: script.turn_on
      #        entity_id: script.vacuum_living_room
      entity_id: script.vacuum_all

- alias: "Vacuum Cleaning"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: "cleaning"
  condition:
    - condition: state
      entity_id: input_boolean.vacuum_notification
      state: "on"
  action:
    - service: notify.telegram
      data:
        title: !secret vacuum_name
        message: "Пылесос начал уборку"

- alias: "Vacuum Returning"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: "returning"
  condition:
    - condition: state
      entity_id: input_boolean.vacuum_notification
      state: "on"
  action:
    - service: notify.telegram
      data_template:
        title: !secret vacuum_name
        message: "Пылесос завершил уборку и возвращается на станцию. Время уборки: {{states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time}} минут. Общая площадь уборки: {{states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area}} м²"

- alias: "Vacuum Docked"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      to: "docked"
  condition:
    - condition: state
      entity_id: input_boolean.vacuum_notification
      state: "on"
  action:
    - service: notify.telegram
      data:
        title: !secret vacuum_name
        message: "Пылесос прибыл на станцию и заряжается"

- alias: "Vacuum Cleaner Error"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: sensor.vacuum_cleaner_status_sensor
      to: "Error"
    - platform: state
      entity_id: sensor.vacuum_cleaner_status_sensor
      to: "In Error"
    - platform: state
      entity_id: sensor.vacuum_cleaner_status_sensor
      to: "Charging Error"
  action:
    - service: notify.telegram
      data:
        title: !secret vacuum_name
        message: >
          {% if is_state('sensor.vacuum_cleaner_error_sensor', 'No Error')  %}
            {{states.vacuum.xiaomi_vacuum_cleaner.attributes.status}}
          {% else %}
            {{states.sensor.vacuum_cleaner_error_sensor.state}}
          {% endif %}

- alias: "Vacuum Cleaner Error Solved"
  initial_state: "on"
  trigger:
    - platform: state
      entity_id: sensor.vacuum_cleaner_error_sensor
      to: "No Error"
  condition:
    condition: template
    value_template: "{{ states.sensor.ha_uptime.state  | int > 10 }}"
  action:
    - service: notify.telegram
      data:
        title: !secret vacuum_name
        message: "Пылесос вне опасности"

- alias: "Start Cleaning Room"
  initial_state: "on"
  #hide_entity: true
  trigger:
    - platform: state
      entity_id: input_select.vacuum_room
      from: "Выбрать комнату"
  action:
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if is_state("input_select.vacuum_room", "Вся квартира") %}
           script.vacuum_all
          {% elif is_state("input_select.vacuum_room", "Ванная") %}
            script.vacuum_wc
          {% elif is_state("input_select.vacuum_room", "Коридор") %}
            script.vacuum_hallway
          {% elif is_state("input_select.vacuum_room", "Кухня") %}
            script.vacuum_kitchen
          {% elif is_state("input_select.vacuum_room", "Зал") %}
            script.vacuum_living_room
          {% elif is_state("input_select.vacuum_room", "Спальня") %}
            script.vacuum_bedroom
          {% endif %}
    - service: input_select.select_option
      entity_id: input_select.vacuum_room
      data_template:
        option: "Выбрать комнату"
